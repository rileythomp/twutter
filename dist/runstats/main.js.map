{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/passwordreset/passwordreset.component.ts","./src/app/components/passwordreset/passwordreset.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/helpers.ts","./src/environments/environment.ts","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/profile/likes/likes.component.ts","./src/app/components/profile/likes/likes.component.html","./src/app/components/userpage/userposts/userposts.component.ts","./src/app/components/userpage/userposts/userposts.component.html","./src/app/components/profile/posts/posts.component.ts","./src/app/components/profile/posts/posts.component.html","./src/app/components/comments/comments.component.ts","./src/app/components/comments/comments.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/userpage/userpage.component.ts","./src/app/components/userpage/userpage.component.html","./src/app/components/signupauth/signupauth.component.ts","./src/app/components/signupauth/signupauth.component.html","./src/app/services/comments.service.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/post/post.component.ts","./src/app/components/post/post.component.html","./src/app/app.module.ts","./src/app/services/posts.service.ts","./src/app/services/auth.service.ts","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n\tselector: 'app-header',\n\ttemplateUrl: './header.component.html',\n\tstyleUrls: ['./header.component.less']\n})\nexport class HeaderComponent implements OnInit {\n\tconstructor(private users: UserService, private router: Router) { }\n\n\tngOnInit(): void {}\n\n\tlogoutUser() {\n\t\tdocument.cookie = `access_token=; max-age=0; SameSite=None; Secure`\n\t}\n\n\thomePage() {\n\t\tthis.users.GetUser().subscribe(\n\t\t\tuser => {\n\t\t\t\tthis.router.navigateByUrl(user.username)\n\t\t\t},\n\t\t\terr => this.router.navigateByUrl('login')\n\t\t)\n\t}\n}\n","<div class=\"hero-head\">\n    <nav class=\"navbar\">\n        <div class=\"container\">\n            <div id=\"navbarMenuHeroA\" class=\"navbar-menu\">\n                <div class=\"navbar-end\">\n                    <a (click)='homePage()' class=\"navbar-item\">\n                        Home\n                    </a>\n                    <a href=\"/profile\" class=\"navbar-item\">\n                        Profile\n                    </a>\n                    <a href=\"/login\" class=\"navbar-item\">\n                        Login\n                    </a>\n                    <a routerLink='/signup' class=\"navbar-item\">\n                        Sign Up\n                    </a>\n                    <a href='/login' (click)='logoutUser()' class=\"navbar-item\">\n                        Logout\n                    </a>\n                </div>\n            </div>\n        </div>\n    </nav>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-passwordreset',\n\ttemplateUrl: './passwordreset.component.html',\n\tstyleUrls: ['./passwordreset.component.less']\n})\nexport class PasswordresetComponent implements OnInit {\n\tauthMethod: string\n\tuserContact: string\n\tresetCode: string\n\n\tconstructor(private auth: AuthService, private router: Router) { }\n\n\tngOnInit(): void {\n\t}\n\n\tresetPassword(method: string) {\n\t\tthis.authMethod = method\n\t\tif (this.authMethod == 'sms') {\n\t\t\tlet smsInput = <HTMLInputElement>document.getElementById('sms-number')\n\t\t\tthis.userContact = smsInput.value\n\t\t\tthis.auth.CreateCode(this.userContact, 'passwordreset', 'sms').subscribe(\n\t\t\t\tres => {\n\t\t\t\t\tthis.displayInputs('none', 'none', 'block', 'none')\n\t\t\t\t},\n\t\t\t\terr => alert(`Error resetting password: ${err.error}`)\n\t\t\t)\n\t\t} else if (this.authMethod == 'email') {\n\t\t\tlet emailInput = <HTMLInputElement>document.getElementById('email')\n\t\t\tthis.userContact = emailInput.value\n\t\t\tthis.auth.CreateCode(this.userContact, 'passwordreset', 'email').subscribe(\n\t\t\t\tres => this.displayInputs('none', 'none', 'block', 'none'),\n\t\t\t\terr => alert(`Error resetting password: ${err.error}`)\n\t\t\t)\n\t\t}\n\t}\n\n\tdisplayInputs(emailReset, smsReset, resetCode, setPassword) {\n\t\tdocument.getElementById('email-reset').style.display = emailReset;\n\t\tdocument.getElementById('sms-reset').style.display = smsReset;\n\t\tdocument.getElementById('reset-code-page').style.display = resetCode\n\t\tdocument.getElementById('set-password').style.display = setPassword;\n\t}\n\n\tvalidResetCode() {\n\t\tthis.resetCode = (<HTMLInputElement>document.getElementById('reset-code')).value\n\t\tthis.auth.ValidateCode(this.resetCode, this.userContact, 'passwordreset', this.authMethod).subscribe(\n\t\t\tres => {\n\t\t\t\tthis.displayInputs('none', 'none', 'none', 'block')\n\t\t\t\tdocument.cookie = `password_token=${res['token']}; max-age=${res['max_age']}; SameSite=None; Secure;`\n\t\t\t}, \n\t\t\terr => alert('reset code not valid')\n\t\t)\n\t}\n\n\tsetNewPassword() {\n\t\tlet newPassword = (<HTMLInputElement>document.getElementById('new-password')).value\n\t\tthis.auth.SetNewPassword(newPassword).subscribe(\n\t\t\tres => {\n\t\t\t\tdocument.cookie = `password_token=; max-age0; SameSite=None; Secure;`\n\t\t\t\talert('Password reset, redirecting to login page')\n\t\t\t\tthis.router.navigateByUrl('login')\n\t\t\t},\n\t\t\terr => alert(`Error resetting password: ${err.error}`)\n\t\t)\n\t}\n\n\ttoggleResetMethod(method: string) {\n\t\t(<HTMLInputElement>document.getElementById('email')).value = '';\n\t\t(<HTMLInputElement>document.getElementById('sms-number')).value = '';\n\t\tif (method == 'sms') {\n\t\t\tthis.displayInputs('none', 'block', 'none', 'none')\n\t\t} else if (method == 'email') {\n\t\t\tthis.displayInputs('block', 'none', 'none', 'none')\n\t\t}\n\t}\n\n}\n","<div class=\"column is-4 is-offset-4\">\n    <h3 class=\"title\">Password Reset</h3>\n    <div class=\"box\">\n\n        <div id='email-reset' class=\"field\">\n            <div class=\"control\">\n                <input id='email' class=\"input is-large\" type=\"email\" placeholder=\"Email\" autofocus=\"\">\n            </div>\n\n            <div (click)='toggleResetMethod(\"sms\")' class='toggle-method'>\n                <a>Use SMS to reset password</a>\n            </div>\n\n            <div>\n                <button (click)='resetPassword(\"email\")' class=\"button is-block is-info is-large is-fullwidth\">Send Reset Code</button>\n            </div>\n        </div>\n\n        <div id='sms-reset'  class=\"hidden field\">\n            <div class=\"control\">\n                <input id='sms-number' class=\"input is-large\" type=\"tel\" placeholder=\"SMS Number\" autofocus=\"\">\n            </div>\n\n            <div (click)='toggleResetMethod(\"email\")' class='toggle-method'>\n                <a>Use Email to reset password</a>\n            </div>\n\n            <div>\n                <button (click)='resetPassword(\"sms\")' class=\"button is-block is-info is-large is-fullwidth\">Send reset code</button>\n            </div>\n        </div>\n\n        <div id='reset-code-page'  class=\"hidden field\">\n            <div class=\"control\">\n                <input id='reset-code' class=\"input is-large\" type=\"tel\" placeholder=\"Reset code\" autofocus=\"\">\n            </div>\n\n            <div>\n                <button (click)='validResetCode()' class=\"button is-block is-info is-large is-fullwidth\">Submit reset code</button>\n            </div>\n        </div>\n\n        <div id='set-password'  class=\"field\">\n            <div class=\"control\">\n                <input id='new-password' class=\"input is-large\" type=\"password\" placeholder=\"New password\" autofocus=\"\">\n            </div>\n\n            <div>\n                <button (click)='setNewPassword()' class=\"button is-block is-info is-large is-fullwidth\">Reset password</button>\n            </div>\n        </div>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-signup',\n\ttemplateUrl: './signup.component.html',\n\tstyleUrls: ['./signup.component.less']\n})\nexport class SignupComponent implements OnInit {\n\n\tconstructor(private auth: AuthService, private users: UserService, private router: Router) { }\n\n\tngOnInit(): void {\n\t}\n\n\tsignupUser() {\n\t\tlet username = (<HTMLInputElement>document.getElementById('username')).value\n\t\tlet password = (<HTMLInputElement>document.getElementById('password')).value\n\t\tlet emailInput = <HTMLInputElement>document.getElementById('email');\n\t\tlet phoneInput = <HTMLInputElement>document.getElementById('phone-number')\n\t\tlet isPublic = (<HTMLInputElement>document.getElementById('is-private')).checked ? 0 : 1\n\n\t\tif (!emailInput.validity.valid){\n\t\t\temailInput.focus()\n\t\t\treturn\n\t\t}\n\n\t\t// remove non-numeric characters\n\t\tlet phoneNum = phoneInput.value.replace(/\\D/g,'');\n\t\tif (phoneNum.length != 10) {\n\t\t\tphoneInput.value = ''\n\t\t\tphoneInput.focus()\n\t\t\treturn\n\t\t}\n\n\t\tthis.users.AddUser(username, password, emailInput.value, phoneNum, isPublic).subscribe(\n\t\t\tres => {\n\t\t\t\t// this.auth.CreateCode(emailInput.value, 'verify', 'email').subscribe(\n\t\t\t\t// \tres => {\n\t\t\t\t// \t\tthis.router.navigate(\n\t\t\t\t//\t\t\t['signupauth'],\n\t\t\t\t// \t\t\t{ state: { userContact: emailInput.value, authMethod: 'sms' } }) \n\t\t\t\t// \t},\n\t\t\t\t// \terr => {\n\t\t\t\t// \t\talert(err.error)\n\t\t\t\t// \t}\n\t\t\t\t// )\n\t\t\t\tthis.auth.CreateCode(phoneNum, 'verify', 'sms').subscribe(\n\t\t\t\t\tres => this.router.navigate(\n\t\t\t\t\t\t['signupauth'],\n\t\t\t\t\t\t{ state: { userContact: phoneNum, authMethod: 'sms' } }\n\t\t\t\t\t),\n\t\t\t\t\terr => alert(`Error verifying account: ${err.error}`)\n\t\t\t\t)\n\t\t\t},\n\t\t\terr => alert(err.error)\n\t\t)\n\t}\n}\n","<div class='column is-4 is-offset-4'>\n    <h3 class='title'>Sign Up</h3>\n    <div class='box'>\n        <div class='field'>\n            <div class='control'>\n                <input id='email' class='input is-large' type='email' name='email' placeholder='Email' autofocus=''>\n            </div>\n        </div>\n\n        <div class='field'>\n            <div class='control'>\n                <input id='phone-number' class='input is-large' type='email' name='tel' placeholder='Phone number' autofocus=''>\n            </div>\n        </div>\n\n        <div class='field'>\n            <div class='control'>\n                <input id='username' class='input is-large' type='text' name='username' placeholder='Username' autofocus=''>\n            </div>\n        </div>\n\n        <div class='field'>\n            <div class='control'>\n                <input id='password' class='input is-large' type='password' name='password' placeholder='Password'>\n            </div>\n        </div>\n\n        <div class='field'>\n            <div class='control'>\n                <input id='is-private' type='checkbox' checked='checked'>\n                Private Profile\n            </div>\n        </div>\n\n        <button (click)='signupUser()' class=\"button is-block is-info is-large is-fullwidth\">Sign Up</button>\n    </div>\n</div>\n ","import { HttpHeaders } from \"@angular/common/http\";\r\n\r\nexport const ApiAddr = 'http://localhost:5000'\r\n\r\nfunction GetCookie(cname) {\r\n    let name = cname + \"=\";\r\n    let decodedCookie = decodeURIComponent(document.cookie);\r\n    let ca = decodedCookie.split(';');\r\n    for(let i = 0; i <ca.length; i++) {\r\n\t\tlet c = ca[i];\r\n\t\twhile (c.charAt(0) == ' ') {\r\n\t\t\tc = c.substring(1);\r\n\t\t}\r\n\t\tif (c.indexOf(name) == 0) {\r\n\t\t\treturn c.substring(name.length, c.length);\r\n\t\t}\r\n    }\r\n    return \"\";\r\n}\r\nexport { GetCookie }\r\n\r\nexport const JsonOpts = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'application/json',\r\n\t\t'Accept': 'application/json'\r\n\t})\r\n}\r\n  \r\nexport const TextOpts = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'text/plain',\r\n\t})\r\n}\r\n\r\nfunction GetOpts(contentType, accept, token) {\r\n\treturn {\r\n\t\theaders: new HttpHeaders({\r\n\t\t\t'Content-Type': contentType,\r\n\t\t\t'Accept': accept,\r\n\t\t\t'Access-Token': GetCookie(token)\r\n\t\t})\r\n\t}\r\n}\r\nexport { GetOpts }\r\n\r\nfunction GetJsonOpts() {\r\n\treturn GetOpts('application/json', 'application/json', 'access_token')\r\n}\r\nexport { GetJsonOpts }\r\n\r\nfunction GetTextOpts() {\r\n\treturn GetOpts('text/plain', 'text/plain', 'access_token')\r\n}\r\nexport { GetTextOpts }\r\n\r\nfunction GetImgOpts() {\r\n\treturn {\r\n\t\theaders: new HttpHeaders({\r\n\t\t\t'Accept': 'text/plain ',\r\n\t\t\t'Access-Token': GetCookie('access_token')\r\n\t\t})\r\n\t}\r\n}\r\nexport { GetImgOpts }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n\tselector: 'app-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.less']\n})\nexport class ProfileComponent implements OnInit {\n\temail: string;\n\tname: string;\n\tnumber: string;\n\tbio: string;\n\timgUrl: string;\n\tbioTA: HTMLTextAreaElement;\n\tisPrivate: boolean;\n\tshowPosts: boolean = true;\n\n\tuserContact: string;\n\taction: string;\n\tmethod: string;\n\tupdate: any;\n\n\tconstructor(\n\t\tprivate users: UserService,\n\t\tprivate auth: AuthService,\n\t\tprivate router: Router\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.bioTA = <HTMLTextAreaElement>document.getElementById('bio')\n\t\tthis.users.GetUser().subscribe(\n\t\t\tuser => {\n\t\t\t\tlet num = user.phone_number\n\t\t\t\tthis.email = user.email\n\t\t\t\tthis.name = user.username\n\t\t\t\tthis.number = num.slice(0, 3) + '-' + num.slice(3, 6) + '-' + num.slice(6)\n\t\t\t\tthis.bio = user.bio\n\t\t\t\tthis.imgUrl = user.imgUrl\n\t\t\t\tthis.isPrivate = user.is_public != '1'\n\t\t\t},\n\t\t\terr => this.router.navigateByUrl('login')\n\t\t)\n\t}\n\n\tngAfterViewChecked(): void {\n\t\tthis.bioTA = <HTMLTextAreaElement>document.getElementById('bio')\n\t\tthis.bioTA.style.height = \"\";\n\t\tthis.bioTA.style.height = this.bioTA.scrollHeight + 3 + \"px\"\n\t}\n\n\tcreateAuthCode(method: string, userContact: string, input: HTMLInputElement) {\n\t\tlet sure = confirm(`Changing your ${method == 'sms' ? 'phone number' : 'email address'} will require verifying the new one with an authentication code. Are you sure you want to continue?`)\n\t\tif (sure) {\n\t\t\tthis.userContact = userContact\n\t\t\tthis.action = 'update'\n\t\t\tthis.method = method\n\t\t\tthis.auth.CreateAuthCode(userContact, this.action, method).subscribe(\n\t\t\t\tres => this.showCodeInput(true),\n\t\t\t\terr => {\n\t\t\t\t\talert(`Error creating verification code: ${err.error}`)\n\t\t\t\t\tif (err.status == 303) {\n\t\t\t\t\t\tthis.showCodeInput(true)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinput.focus()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}\n\n\n\tupdateProfile() {\n\t\tlet emailInput = <HTMLInputElement>document.getElementById('email')\n\t\tlet email = emailInput.value\n\t\tlet phoneInput = <HTMLInputElement>document.getElementById('number')\n\t\tlet phone = phoneInput.value\n\t\tlet bio = (<HTMLTextAreaElement>document.getElementById('bio')).value\n\t\tlet isPublic = (<HTMLInputElement>document.getElementById('is-private')).checked ? 0 : 1\n\n\t\tif (!emailInput.validity.valid){\n\t\t\temailInput.focus()\n\t\t\treturn\n\t\t}\n\n\t\t// remove non-numeric characters\n\t\tlet phoneNum = phone.replace(/\\D/g,'');\n\t\tif (phoneNum.length != 10) {\n\t\t\tphoneInput.focus()\n\t\t\treturn\n\t\t}\n\n\t\tif (email != this.email && phone != this.number) {\n\t\t\talert('Sorry, due to 2FA requirements you must change your email and phone number separately.')\n\t\t\treturn\n\t\t}\n\n\t\tthis.update = {\n\t\t\tname: this.name,\n\t\t\temail: email,\n\t\t\tphone: phone,\n\t\t\tbio: bio,\n\t\t\tisPublic: isPublic\n\t\t}\n\n\t\tif (email != this.email) {\n\t\t\tthis.createAuthCode('email', email, emailInput)\n\t\t\treturn\n\t\t}\n\t\tif (phone != this.number) {\n\t\t\tthis.createAuthCode('sms', phone, phoneInput)\n\t\t\treturn\n\t\t}\n\t\t\n\t\tthis.users.UpdateUser(this.name, email, phone, bio, isPublic).subscribe(\n\t\t\tres => this.ngOnInit(),\n\t\t\terr => alert(`Error updating profile: ${err.error}`)\n\t\t)\n\t}\n\n\tshowCodeInput(show) {\n\t\tdocument.getElementById('entercode').style.display = show ? 'block': 'none';\n\t\tdocument.getElementById('overlay').style.display = show ? 'block' : 'none';\n\t\t(<HTMLInputElement>document.getElementById('update-code')).value = '';\n\t}\n\t  \n\tsubmitCode() {\n\t\tlet code = (<HTMLInputElement>document.getElementById('update-code')).value\n\t\tthis.auth.ValidateAuthCode(code, this.userContact, this.action, this.method).subscribe(\n\t\t\tres => {\n\t\t\t\tthis.users.UpdateUser(\n\t\t\t\t\tthis.update.name,\n\t\t\t\t\tthis.update.email,\n\t\t\t\t\tthis.update.phone,\n\t\t\t\t\tthis.update.bio,\n\t\t\t\t\tthis.update.isPublic\n\t\t\t\t).subscribe(\n\t\t\t\t\tres => this.ngOnInit(),\n\t\t\t\t\terr => alert(`Error updating user: ${err.error}`)\n\t\t\t\t)\t\n\t\t\t},\n\t\t\terr => alert(`Error validating verification code: ${err.error}`)\n\t\t)\n\t\tthis.showCodeInput(false)\n\t}\n\n\tresetPassword() {\n\t\tthis.router.navigateByUrl('passwordreset')\n\t}\n\n\tdeleteProfile() {\n\t\tlet del = confirm('Are you sure you want to delete your profile? This action is unreversible');\n\t\tif (del) {\n\t\t\tthis.users.DeleteUser().subscribe(\n\t\t\t\tres => this.router.navigateByUrl('signup'), \n\t\t\t\terr => alert(`Error deleting profile: ${err.error}`)\n\t\t\t)\n\t\t}\n\n\t}\n\n\tchangePicture() {\n\t\tlet file = (<HTMLInputElement>document.getElementById('image-file')).files[0];\n\t\tif (file == undefined || file == null) {\n\t\t\talert('Could not find image')\n\t\t\treturn\n\t\t}\n\t\tvar formData = new FormData();\n\t\tformData.append('file', file);\n\t\tthis.users.ChangePicture(formData).subscribe(\n\t\t\tres => window.location.reload(), \n\t\t\terr => alert(`Error changing picture: ${err.error}`)\n\t\t)\n\t}\n}\n","<div id='user-page'>\n    <div id='profile'>\n        <p id='name'>{{name}}</p>\n    \n        <img src='{{imgUrl}}' alt=''>\n        <br>\n        <input id='image-file' type='file' accept='.png, .jpg, .jpeg' (change)='changePicture()'>\n    \n        <p class='profile-input'>\n            Bio:\n            <br>\n            <textarea oninput='this.style.height = \"\";this.style.height = this.scrollHeight + 3 + \"px\"' id='bio'>{{bio}}</textarea>\n        </p>\n    \n        <p class='profile-input'>\n            Email:\n            <br>\n            <input id='email' type='email' value='{{email}}'>\n        </p>\n    \n        <p class='profile-input'>\n            Number\n            <br>\n            <input id='number' type='tel' value='{{ number }}'>\n        </p>\n    \n        <input id='is-private' type='checkbox' [checked]='isPrivate'>\n        <span>&nbsp; Private Profile</span>\n        <br>\n    \n        <button (click)='updateProfile()'>Update Profile</button>\n        <br>\n        <button (click)='resetPassword()'>Reset Password</button>\n        <br>\n        <button (click)='deleteProfile()'>Delete Profile</button>\n    </div>\n    <div>\n        <div class='navbar-start'>\n            <a (click)='showPosts = true' class='navbar-item'>Posts</a>\n            <a (click)='showPosts = false' class='navbar-item'>Likes</a>\n        </div>\n        <div  id='posts-display'>\n            <app-posts *ngIf='showPosts'></app-posts>\n            <app-likes *ngIf='!showPosts'></app-likes>\n        </div>\n    </div>\n</div>\n<div id='overlay'>\n</div>\n<div class='form-popup' id='entercode'>\n    <div class='form-container'>\n      <input id='update-code' type='text' placeholder='Enter contact verification code' name='authcode' required>\n      <button type='button' class='btn' (click)='submitCode()'>Submit code</button>\n      <button type='button' class='btn cancel' (click)='showCodeInput(false)'>Close</button>\n    </div>\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PostsService } from 'src/app/services/posts.service';\n\n@Component({\n\tselector: 'app-likes',\n\ttemplateUrl: './likes.component.html',\n\tstyleUrls: ['./likes.component.less']\n})\nexport class LikesComponent implements OnInit {\n\tsortBy: string = 'newest'\n\tposts: any;\n\n  \tconstructor(private postsApi: PostsService) { }\n\n\tngOnInit(): void {\n\t\tthis.postsApi.GetLikedPosts(this.sortBy).subscribe(\n\t\t\tres => this.posts = res,\n\t\t\terr => console.log(`Error getting posts: ${err.error}`)\n\t\t)\n\t}\n\n\tgetLikedPosts(ev: any): void {\n\t\tthis.sortBy = ev.target.value;\n\t\tthis.postsApi.GetLikedPosts(this.sortBy).subscribe(\n\t\t\tres => this.posts = res,\n\t\t\terr => console.log(`Error getting posts: ${err.error}`)\n\t\t)\n\t}\n}\n","<div id='liked-posts'>\n    <label for='sort'>Sort by:</label>&nbsp;\n    <select name='sort' id='sortby' (change)='getLikedPosts($event)'>\n        <option value='newest'>Newest</option>\n        <option value='oldest'>Oldest</option>\n        <option value='liked'>Most Liked</option>\n        <option value='disliked'>Most disliked</option>\n    </select>\n\n    <div class='post' *ngFor='let p of posts'>\n        <app-post [post]='p'></app-post>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\nimport { PostsService } from 'src/app/services/posts.service';\n\n@Component({\n\tselector: 'app-userposts',\n\ttemplateUrl: './userposts.component.html',\n\tstyleUrls: ['./userposts.component.less']\n})\nexport class UserpostsComponent implements OnInit {\n\tusername: string;\n\tposts: any[];\n\tsortBy: string = 'newest'\n\n  \tconstructor(private route: ActivatedRoute, private postsApi: PostsService) { }\n\n  \tngOnInit(): void {\n\t\tthis.route.params.subscribe(params => {\n\t\t\tthis.username = params['username'];\n\t\t\tthis.postsApi.GetPostsByUsername(this.username, this.sortBy).subscribe(\n\t\t\t\tres => this.posts = res,\n\t\t\t\terr => console.log(`Error getting posts: ${err.error}`)\n\t\t\t)\n\t\t})\n\t}\n\n\tgetPosts(ev: any): void {\n\t\tthis.sortBy = ev.target.value\n\t\tthis.postsApi.GetPostsByUsername(this.username,this.sortBy).subscribe(\n\t\t\tres => this.posts = res,\n\t\t\terr => console.log(`Error getting posts: ${err.error}`)\n\t\t)\n\t}\n}\n","<div id='user-posts'>\n    <label for='sort'>Sort by:</label>&nbsp;\n    <select name='sort' id='sortby' (change)='getPosts($event)'>\n        <option value='newest'>Newest</option>\n        <option value='oldest'>Oldest</option>\n        <option value='liked'>Most Liked</option>\n        <option value='disliked'>Most disliked</option>\n    </select>\n    \n    <div class='post' *ngFor='let p of posts'>\n        <app-post [post]='p'></app-post>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PostsService } from 'src/app/services/posts.service';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n\tselector: 'app-posts',\n\ttemplateUrl: './posts.component.html',\n\tstyleUrls: ['./posts.component.less']\n})\nexport class PostsComponent implements OnInit {\n\tposts: any;\n\tisPrivate: boolean;\n\tsortBy: string = 'newest'\n\n\tconstructor(private postsApi: PostsService, private router: Router) { }\n\n\tngOnInit(): void {\n\t\tthis.isPrivate = true;\n\t\tthis.postsApi.GetPosts(this.sortBy).subscribe(\n\t\t\tres => this.formatDates(res),\n\t\t\terr => console.log(`Error getting posts: ${err.error}`)\n\t\t)\n\t}\n\n\tpublishPost(): void {\n\t\tlet textArea = <HTMLTextAreaElement>document.getElementById('newpost')\n\t\tlet postText =  textArea.value\n\t\tlet isPublic =  (<HTMLInputElement>document.getElementById('private-post')).checked ? 0 : 1\n\t\tlet newPost = {\n\t\t\tpost_text: postText,\n\t\t\tis_public: isPublic\n\t\t}\n\t\tthis.postsApi.PublishPost(newPost).subscribe(\n\t\t\tres => {\n\t\t\t\tthis.ngOnInit()\n\t\t\t\ttextArea.value = ''\n\t\t\t},\n\t\t\terr => alert(`Error publishing post: ${err.error}`)\n\t\t)\n\t}\n\n\tdeletePost(postId: string): void {\n\t\tlet del = confirm('Are you sure you want to delete this post? This action is unreversible');\n\t\tif (del) {\n\t\t\tthis.postsApi.DeletePost(postId).subscribe(\n\t\t\t\tres => this.ngOnInit(),\n\t\t\t\terr => alert(`Error deleting post: ${err.error}`)\n\t\t\t)\n\t\t}\n\t}\n\n\teditPost(ev: any, postId: string): void {\n\t\tlet post = document.getElementById(postId)\n\t\tpost.style.display = 'none';\n\t\tlet postEdit = document.getElementById(postId + '-edit')\n\t\tpostEdit.style.display = 'block';\n\t\tpostEdit.innerHTML = post.innerHTML\n\t\tev.target.style.display = 'none';\n\t\tlet postUpdate = document.getElementById(postId + '-update')\n\t\tpostUpdate.style.display = 'inline';\n\t}\n\n\tupdatePost(postId: string): void {\n\t\tlet postText =  (<HTMLTextAreaElement>document.getElementById(postId + '-edit')).value\n\t\tlet newPost = {\n\t\t\tpost_id: postId,\n\t\t\tpost_text: postText\n\t\t}\n\t\tthis.postsApi.UpdatePost(newPost).subscribe(\n\t\t\tres => this.ngOnInit(),\n\t\t\terr => alert(`Error editing post: ${err.error}`)\n\t\t)\n\t}\n\n\tchangePostPrivacy(ev: any, postId: string): void {\n\t\tlet isPublic = !ev.target.checked\n\t\tlet sure = confirm(`Are you sure you want to make this post ${isPublic ? 'public': 'private'}?`)\n\t\tif (!sure) { return }\n\t\tlet newPost = {\n\t\t\tpost_id: postId,\n\t\t\tis_public: isPublic ? 1 : 0\n\t\t}\n\t\tthis.postsApi.ChangePostPrivacy(newPost).subscribe(\n\t\t\tres => this.ngOnInit(), \n\t\t\terr => alert(`Error changing post privacy: ${err.error}`)\n\t\t)\n\t}\n\n\tgetPosts(ev: any): void {\n\t\tthis.sortBy = ev.target.value\n\t\tthis.postsApi.GetPosts(this.sortBy).subscribe(\n\t\t\tres => this.formatDates(res),\n\t\t\terr => console.log(`Error getting posts: ${err.error}`)\n\t\t)\n\t}\n\n\tformatDates(res): void {\n\t\tthis.posts = []\n\t\tfor (let post of res) {\n\t\t\tlet published = new Date(post.created_at * 1000)\n\t\t\tconst datepipe: DatePipe = new DatePipe('en-US')\n\t\t\tpost.published = datepipe.transform(published, 'MMMM dd yyyy')\n\t\t\tthis.posts.push(post)\n\t\t}\n\t}\n}\n","<div id='posts'>\n    <textarea id='newpost' cols='80' rows='10'></textarea>\n    <br>\n    <button (click)='publishPost()'>Publish Post</button>\n    <input id='private-post' type='checkbox' [checked]='isPrivate'>\n    <span>&nbsp; Private Post</span>\n    \n    <div id='user-posts'>\n        <label for='sort'>Sort by:</label>&nbsp;\n        <select name='sort' id='sortby' (change)='getPosts($event)'>\n            <option value='newest'>Newest</option>\n            <option value='oldest'>Oldest</option>\n            <option value='liked'>Most Liked</option>\n            <option value='disliked'>Most disliked</option>\n        </select>\n    \n        <div class='post' *ngFor='let p of posts'>\n            <p class='post-text' id='{{p.post_id}}'>\n                {{p.post}}\n            </p>\n            <textarea class='post-edit' id='{{p.post_id}}-edit' cols='80' rows=\"10\"></textarea>\n            <p class='post-metadata'>Published: {{p.published}}</p>\n            <p class='post-metadata'>Likes: {{p.likes}}</p>\n            <div class='post-controls'>\n                <button (click)='deletePost(p.post_id)'>Delete Post</button>\n                <button (click)='editPost($event, p.post_id)'>Edit Post</button>\n                <button  class='update-post' id='{{p.post_id}}-update' (click)='updatePost(p.post_id, !p.is_public)'>Update Post</button>\n                <input id='{{p.post_id}}-private' type='checkbox' [checked]='!p.is_public' (change)='changePostPrivacy($event, p.post_id)'>\n                <span>&nbsp; Private Post</span>\n            </div>\n    \n            <hr>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Output, Input, EventEmitter} from '@angular/core';\nimport { CommentsService } from 'src/app/services/comments.service';\n\n@Component({\n\tselector: 'app-comments',\n\ttemplateUrl: './comments.component.html',\n\tstyleUrls: ['./comments.component.less']\n})\nexport class CommentsComponent implements OnInit {\n\tcomments: any;\n\tcommentText: string;\n\n\t@Input() postId: any;\n\n\t@Output() setCommentCount = new EventEmitter<number>();\n\n\tconstructor(private commentsApi: CommentsService) { }\n\n\tngOnInit(): void {\n\t\tthis.commentText = ''\n\t\tthis.commentsApi.GetPostComments(this.postId).subscribe(\n\t\t\tres => {\n\t\t\t\tthis.comments = res\n\t\t\t\tthis.setCommentCount.next(this.comments.length)\n\t\t\t},\n\t\t\terr => alert(`Error getting comments: ${err.error}`)\n\t\t)\n\t}\n\n\tpostComment(): void {\n\t\tthis.commentsApi.PublishComment(this.commentText, this.postId).subscribe(\n\t\t\tres => this.ngOnInit(),\n\t\t\terr => alert(`Error posting comment: ${err.error}`)\n\t\t)\n\t}\n}\n","<div class='post-comments'>\n    <textarea [(ngModel)]=\"commentText\" cols='60' rows='2'></textarea>\n    <br>\n    <button (click)='postComment()'>Post</button>\n    <div class='comment' *ngFor='let c of comments'>\n        <p><span class='comment-author'>{{c.author}}: </span>{{c.comment}}</p>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n}\n","<div>\n\t<app-header></app-header>\n\t<router-outlet></router-outlet>\n\t<!-- <app-footer></app-footer> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-userpage',\n  templateUrl: './userpage.component.html',\n  styleUrls: ['./userpage.component.less']\n})\nexport class UserpageComponent implements OnInit {\n\timgUrl: string;\n\tbio: string;\n\temail: string;\n\tusername: string;\n\n\tconstructor(private route: ActivatedRoute, private users: UserService) { }\n\n\tngOnInit(): void {\n\t\tthis.route.params.subscribe(params => {\n\t\t\tthis.username = params['username'];\n\n\t\t\tthis.users.GetUserByName(this.username).subscribe(\n\t\t\t\tuser => {\n\t\t\t\t\tthis.email = user.email\n\t\t\t\t\tthis.bio = user.bio\n\t\t\t\t\tthis.imgUrl = user.imgUrl\n\t\t\t\t},\n\t\t\t\terr => console.log(`Error getting user: ${err.error}`)\n\t\t\t)\n\t\t});\n\t}\n}\n","<div id='user-info'>\n    <p id='username'>{{username}}</p>\n\n    <img src='{{imgUrl}}' alt='Image unavailable'>\n\n    <p class='profile-info' id='bio'>\n       {{bio}}\n    </p>\n\n    <p class='profile-info' id='email'>\n        {{email}}\n    </p>\n</div>\n<app-userposts></app-userposts>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-signupauth',\n  templateUrl: './signupauth.component.html',\n  styleUrls: ['./signupauth.component.less']\n})\nexport class SignupauthComponent implements OnInit {\n\tuserContact: string\n\tauthMethod: string;\n\n\tconstructor(\n\t\tprivate auth: AuthService,\n\t\tprivate router: Router\n\t) {\n\t\tlet state = this.router.getCurrentNavigation().extras.state\n\t\tthis.authMethod = state?.authMethod\n\t\tthis.userContact = state?.userContact\n\t\tif (this.userContact == undefined) {\n\t\t\tthis.router.navigateByUrl('signup')\n\t\t}\n\t}\n\n\tngOnInit(): void {}\n\n\tvalidateCode() {\n\t\tlet code = (<HTMLInputElement>document.getElementById('signup-code')).value\n\t\tthis.auth.ValidateCode(code, this.userContact, 'verify', this.authMethod).subscribe(\n\t\t\tres => {\n\t\t\t\tdocument.cookie = `access_token=${res['token']}; max-age=${res['max_age']}; SameSite=None; Secure`\n\t\t\t\tthis.router.navigateByUrl('profile')\n\t\t\t},\n\t\t\terr => alert(`Error validating code: ${err.error}`)\n\t\t)\n\t}\n\n}\n","<div class=\"column is-4 is-offset-4\">\n    <h3 class=\"title\">Signup Authentication</h3>\n    <div class=\"box\">\n        <div id='reset-code-page'  class=\"hidden field\">\n            <div class=\"control\">\n                <input id='signup-code' class=\"input is-large\" type=\"tel\" placeholder=\"Signup code\" autofocus=\"\">\n            </div>\n\n            <div>\n                <button (click)='validateCode()' class=\"button is-block is-info is-large is-fullwidth\">Submit signup code</button>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { GetTextOpts, ApiAddr, GetOpts, GetJsonOpts } from '../helpers';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CommentsService {\n\n\tconstructor(private http: HttpClient) { }\n\n\tPublishComment(comment: string, postId: string): Observable<any> {\n\t\treturn this.http.post<any>(\n\t\t\t`${ApiAddr}/comments/add`,\n\t\t\t{\n\t\t\t\t'comment': comment,\n\t\t\t\t'post_id': postId\n\t\t\t}, \n\t\t\tGetJsonOpts()\n\t\t)\n\t}\n\n\tGetPostComments(postId: string): Observable<any> {\n\t\treturn this.http.get<any>(\n\t\t\t`${ApiAddr}/comments/${postId}`,\n\t\t\tGetOpts('text/plain', 'application/json', 'access_token')\n\t\t)\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { GetCookie } from 'src/app/helpers'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})\nexport class LoginComponent implements OnInit {\n\n\tconstructor(private auth: AuthService, private router: Router) {}\n\n\tngOnInit(): void {\n\t\tlet savedUsername = GetCookie('username')\n\t\tif (savedUsername != '') {\n\t\t\t(<HTMLInputElement>document.getElementById('username')).value = savedUsername\n\t\t}\n\t}\n\n  loginUser() {\n\t\tlet usernameInput = <HTMLInputElement>document.getElementById('username')\n\t\tlet passwordInput = <HTMLInputElement>document.getElementById('password')\n\t\tlet rememberInput = <HTMLInputElement>document.getElementById('remember')\n\n\t\tlet user = {\n\t\t\tusername: usernameInput.value,\n\t\t\tpassword: passwordInput.value,\n\t\t}\n\n\t\tif (rememberInput.checked) {\n\t\t\tdocument.cookie = `username=${user.username}; SameSite=None; Secure`\n\t\t} else {\n\t\t\tdocument.cookie = 'username=; SameSite=None; Secure'\n\t\t}\n\n\t\tthis.auth.AuthenticateUser(user).subscribe(\n\t\t\tres => {\n\t\t\t\tdocument.cookie = `access_token=${res['token']}; max-age=${res['max_age']}; SameSite=None; Secure`\n\t\t\t\tthis.router.navigateByUrl('profile')\n\t\t\t},\n\t\t\terr => alert(`Error logging in: ${err.error}`)\n\t\t);\n\t}\n}\n","<div class=\"column is-4 is-offset-4\">\n    <h3 class=\"title\">Login</h3>\n    <div class=\"box\">\n        <div class=\"field\">\n            <div class=\"control\">\n                <input id='username' class=\"input is-large\" type=\"text\" name=\"username\" placeholder=\"Username\" autofocus=\"\">\n            </div>\n        </div>\n\n        <div class=\"field\">\n            <div class=\"control\">\n                <input id='password' class=\"input is-large\" type=\"password\" name=\"password\" placeholder=\"Password\">\n            </div>\n        </div>\n        <div class=\"field\">\n            <label class=\"checkbox\">\n                <input id='remember' type=\"checkbox\" name=\"remember\">\n                Remember me\n            </label>\n\n            <a id='forgot-password' href='/passwordreset'>Forgot password?</a>\n        </div>\n        <button (click)='loginUser()' class=\"button is-block is-info is-large is-fullwidth\">Login</button>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { PostsService } from 'src/app/services/posts.service';\n\n@Component({\n\tselector: 'app-post',\n\ttemplateUrl: './post.component.html',\n\tstyleUrls: ['./post.component.less']\n})\nexport class PostComponent implements OnInit {\n\tshowComments: boolean = false;\n\n\t@Input()\n\tpost: any;\n\n\tconstructor(private postsApi: PostsService) { }\n\n\tngOnInit(): void {\n\t\tthis.formatDate()\n\t}\n\n\tsetCommentCount(count) {\n\t\tthis.post.comments = count\n\t}\n\n\ttogglePostComments(): void {\n\t\tthis.showComments = !this.showComments\n\t}\n\n\tlikePost(change: number): void {\n\t\tthis.postsApi.LikePost(this.post.post_id, change).subscribe(\n\t\t\tres => this.post.likes = res,\n\t\t\terr => alert(`Error liking post: ${err.error}`)\n\t\t)\n\t}\n\n\tformatDate(): void {\n\t\tlet published = new Date(this.post.created_at * 1000)\n\t\tconst datepipe: DatePipe = new DatePipe('en-US')\n\t\tthis.post.published = datepipe.transform(published, 'MMMM dd yyyy')\n\t}\n}\n","<p class='post-author'>{{post.author}}</p>\n<p>{{post.post}}</p>\n<span>Published: {{post.published}}</span>\n<p class='private-post'>{{post.is_public ? '' : 'Private Post'}}</p>\n<button (click)='likePost( 1)'>Like Post</button>\n<button (click)='likePost(-1)'>Dislike Post</button>\n<span>{{post.likes}}</span>\n&nbsp;\n<a (click)='togglePostComments()'>Comments ({{post.comments}})</a>\n<app-comments *ngIf='showComments' [postId]='post.post_id' (setCommentCount)='setCommentCount($event)'></app-comments>\n<hr>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { PasswordresetComponent } from './components/passwordreset/passwordreset.component';\nimport { SignupauthComponent } from './components/signupauth/signupauth.component';\nimport { UserpageComponent } from './components/userpage/userpage.component';\nimport { PostsComponent } from './components/profile/posts/posts.component';\nimport { UserpostsComponent } from './components/userpage/userposts/userposts.component';\nimport { LikesComponent } from './components/profile/likes/likes.component';\nimport { CommentsComponent } from './components/comments/comments.component';\nimport { PostComponent } from './components/post/post.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SignupComponent,\n    LoginComponent,\n    ProfileComponent,\n    PasswordresetComponent,\n    SignupauthComponent,\n    UserpageComponent,\n    PostsComponent,\n    UserpostsComponent,\n    LikesComponent,\n    CommentsComponent,\n    PostComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { GetJsonOpts, ApiAddr, GetTextOpts } from 'src/app/helpers'\nimport { Observable } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PostsService {\n\tconstructor(private http: HttpClient) { }\n\n\tPublishPost(post: any): Observable<any> {\n\t\treturn this.http.post<any>(\n\t\t\t`${ApiAddr}/posts/add`,\n\t\t\tpost,\n\t\t\tGetJsonOpts()\n\t\t)\n\t}\n\n\tGetPosts(sortBy: string): Observable<any> {\n\t\treturn this.http.get<any>(\n\t\t\t`${ApiAddr}/posts?sortby=${sortBy}`,\n\t\t\tGetJsonOpts()\n\t\t)\n\t}\n\n\tGetLikedPosts(sortBy: string): Observable<any> {\n\t\treturn this.http.get<any>(\n\t\t\t`${ApiAddr}/posts/liked?sortby=${sortBy}`,\n\t\t\tGetJsonOpts()\n\t\t)\n\t}\n\n\tGetPostsByUsername(username: string, sortBy: string): Observable<any> {\n\t\treturn this.http.get<any>(\n\t\t\t`${ApiAddr}/posts/${username}?sortby=${sortBy}`,\n\t\t\tGetJsonOpts()\n\t\t)\n\t}\n\n\tDeletePost(postId: string): Observable<any> {\n\t\treturn this.http.delete(\n\t\t\t`${ApiAddr}/posts/${postId}`,\n\t\t\tGetJsonOpts()\n\t\t)\n\t}\n\n\tUpdatePost(post: any): Observable<any> {\n\t\treturn this.http.put<any>(\n\t\t\t`${ApiAddr}/posts/${post.post_id}`,\n\t\t\tpost,\n\t\t\tGetJsonOpts()\n\t\t)\n\t}\n\n\tChangePostPrivacy(post: any): Observable<any> {\n\t\treturn this.http.put<any>(\n\t\t\t`${ApiAddr}/posts/privacy/${post.post_id}`,\n\t\t\tpost,\n\t\t\tGetJsonOpts()\n\t\t)\t\n\t}\n\n\tLikePost(postId: string, change: number): Observable<number> {\n\t\treturn this.http.put<any>(\n\t\t\t`${ApiAddr}/posts/like/${postId}`,\n\t\t\tchange,\n\t\t\tGetTextOpts()\n\t\t)\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { JsonOpts, TextOpts, ApiAddr, GetOpts, GetTextOpts, GetJsonOpts } from 'src/app/helpers';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tconstructor(private http: HttpClient) { }\n\n\t// User endpoints\n\n\tAuthenticateUser(user: any): Observable<any> {\n\t\treturn this.http.post<any>(\n\t\t\t`${ApiAddr}/user/authenticate`,\n\t\t\tuser,\n\t\t\tJsonOpts\n\t\t)\n\t}\n\n\tSetNewPassword(newPassword: string): Observable<any> {\n\t\treturn this.http.put<any>(\n\t\t\t`${ApiAddr}/user/setpassword`,\n\t\t\tnewPassword,\n\t\t\tGetOpts('text/plain', 'application/json', 'password_token')\n\t\t)\n\t}\n\n\t// Codes endpoints\n\n\t// Unauthenticated codes endpoints\n\n\tValidateCode(authCode: string, userContact: string, action: string, method: string): Observable<any> {\n\t\treturn this.http.post<any>(\n\t\t\t`${ApiAddr}/code/validate/${action}/${method}`,\n\t\t\t{\n\t\t\t\t'auth_code': authCode,\n\t\t\t\t'user_contact': userContact\n\t\t\t},\n\t\t\tJsonOpts\n\t\t)\n\t}\n\n\tCreateCode(userContact: string, action: string, method: string): Observable<any> {\n\t\treturn this.http.post<any>(\n\t\t\t`${ApiAddr}/code/create/${action}/${method}`,\n\t\t\tuserContact,\n\t\t\tTextOpts\n\t\t)\n\t}\n\n\t// Authenticated codes endpoints\n\n\tValidateAuthCode(authCode: string, userContact: string, action: string, method: string): Observable<any> {\n\t\treturn this.http.post<any>(\n\t\t\t`${ApiAddr}/code/auth/validate/${action}/${method}`,\n\t\t\t{\n\t\t\t\t'auth_code': authCode,\n\t\t\t\t'user_contact': userContact\n\t\t\t},\n\t\t\tGetOpts('application/json', 'text/plain', 'access_token')\n\t\t)\n\t}\n\n\tCreateAuthCode(userContact: string, action: string, method: string) {\n\t\treturn this.http.post<any>(\n\t\t\t`${ApiAddr}/code/auth/create/${action}/${method}`,\n\t\t\tuserContact,\n\t\t\tGetTextOpts()\n\t\t)\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http'\nimport { JsonOpts, ApiAddr, GetJsonOpts, GetImgOpts } from 'src/app/helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\tconstructor(private http: HttpClient) { }\n\n\tAddUser(\n\t\tusername: string,\n\t\tpassword: string,\n\t\temail: string,\n\t\tphoneNum: string,\n\t\tisPublic: number\n\t): Observable<any> {\n\t\treturn this.http.post<any>(\n\t\t\t`${ApiAddr}/user/add`,\n\t\t\t{\n\t\t\t\tusername: username,\n\t\t\t\tpassword: password,\n\t\t\t\temail: email,\n\t\t\t\tphone_number: phoneNum,\n\t\t\t\tis_public: isPublic\n\t\t\t},\n\t\t\tJsonOpts,\n\t\t)\n\t}\n\n\tGetUserByName(username: string): Observable<any> {\n\t\treturn this.http.get<any>(\n\t\t\t`${ApiAddr}/user/${username}`,\n\t\t\tGetJsonOpts()\n\t\t)\n\t}\n\n\tGetUser(): Observable<any> {\n\t\treturn this.http.get<any>(\n\t\t\t`${ApiAddr}/user`,\n\t\t\tGetJsonOpts()\n\t\t)\n\t}\n\n\tDeleteUser(): Observable<any> {\n\t\treturn this.http.delete<any>(\n\t\t\t`${ApiAddr}/user/delete`,\n\t\t\tGetJsonOpts()\n\t\t)\t\n\t}\n\n\tUpdateUser(\n\t\tusername: string,\n\t\temail: string,\n\t\tphoneNum: string,\n\t\tbio: string,\n\t\tisPublic: number\n\t): Observable<any> {\n\t\treturn this.http.put<any>(\n\t\t\t`${ApiAddr}/user/update`,\n\t\t\t{\n\t\t\t\tusername: username,\n\t\t\t\temail: email,\n\t\t\t\tphone_number: phoneNum,\n\t\t\t\tbio: bio,\n\t\t\t\tis_public: isPublic\n\t\t\t},\n\t\t\tGetJsonOpts()\n\t\t)\n\t}\n\n\tChangePicture(formData: any): Observable<any> {\n\t\treturn this.http.put<any>(\n\t\t\t`${ApiAddr}/user/picture`,\n\t\t\tformData,\n\t\t\tGetImgOpts()\n\t\t)\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { PasswordresetComponent } from './components/passwordreset/passwordreset.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { SignupauthComponent } from './components/signupauth/signupauth.component';\nimport { UserpageComponent } from './components/userpage/userpage.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileComponent\n  },\n  {\n    path: 'signup',\n    component: SignupComponent\n  },\n  {\n    path: 'signupauth',\n    component: SignupauthComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent\n  },\n  {\n    path: 'passwordreset',\n    component: PasswordresetComponent\n  },\n  {\n    path: ':username',\n    component: UserpageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}